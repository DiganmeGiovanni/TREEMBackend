
/**
 * ODClient.js
 * OneDrive rest client
 *
 * @author Giovanni Aguirre
 * @Created on: Jun 14, 2015
 * @Updated on: Apr 23, 2015
 */

var request        = require('request')

var User        = require('../entities/User')
var ODUser      = require('../entities/ODUser')
var oDService   = require('../services/ODService')
var userService = require('../services/UserService')
var TREEMCons   = require('../constants/TREEMConstants')

/**
 * Executes in three phases:
 *
 * 1st: Obtains refresh and access tokens from OneDrive API.
 * 2nd: Obtains user's info from OneDrive API.
 * 3rd: Registers user as an application user if not exists.
 *
 * @param odcode {String} Authorization code generated by OneDrive API during
 *                        first step in auth proccess.
 * @param {Function} callback Function with params (err, user)
 */
exports.signinWithCode = function (odcode, callback) {

  var url = TREEMCons.OD_LIVEAPI_LOGIN
  var form = {
    client_id:     TREEMCons.OD_CLIENT_ID,
    redirect_uri:  TREEMCons.OD_REDIRECT_URL,
    client_secret: TREEMCons.OD_CLIENT_SECRET,
    code:          odcode,
    grant_type:    'authorization_code'
  }

  request.post({url: url, form: form}, function (err, res, body) {
    if (err) { callback(err, null) }
    else {
      body = JSON.parse(body)

      getUserInfo(body.access_token, function (err, userData) {
        if (err) { callback(err, null) }
        else if (userData.error) {
          callback(userData, null)
        }
        else {

          // Check if user exists
          oDService.findUser(userData.emails.account, function (err, oDUser) {
            if (err) { callback(err, null) }

            // User exits
            else if (oDUser) {
              userService.findUser(oDUser.email, function (err, user) {
                if (err) { callback(err, null) }
                else {
                  callback(null, user)
                }
              })
            }

            // User does not exists
            else {
              var user = new User({
                fname       : userData.first_name,
                lname       : userData.last_name,
                email       : userData.emails.account,
                country     : userData.locale,
                birthday    : new Date(),
                enabled     : true,
                lastSession : new Date(),
                createdAt   : new Date(),
                sessionCount: 1
              })

              userService.registerUser(user, function (err, user) {
                if (err) { callback(err, null) }
                else {

                  //
                  // Now registers the ODUser
                  var oDUser = new ODUser({
                    ODEmail: user.email,
                    email: user.email,
                    refToken: body.refresh_token,
                    tokenCreatedAt: new Date()
                  })

                  oDService.registerUser(oDUser, function (err, oDUser) {
                    if (err) { callback(err, null) }
                    else {
                      callback(null, user)
                    }
                  })
                }
              })
            }
          })
        }
      })
    }
  })
}

/**
 * Gets basic info about the onedrive user, such as
 * email, first_name, last_name, gender, locale.
 *
 * @param  {String}   at       A valid access_token for OneDrive
 * @param  {Function} callback Function to call on response complete (err, user)
 */
function getUserInfo(at, callback) {
  var reqOptions = {
    url: TREEMCons.OD_LIVEAPI + 'me',
    qs: {
      access_token: at
    }
  }

  request.get(reqOptions, function (err, res, body) {
    if (err) { callback(err, null) }
    else {
      body = JSON.parse(body);
      callback(null, body);
    }
  })
}
